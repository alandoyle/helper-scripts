#!/bin/bash
#
# incus-installer is a simple installer for Incus.
#
# Copyright (C) 2024-2025 Alan Doyle
#
# https://github.com/alandoyle/helper-scripts/
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# this program. If not, see http://www.gnu.org/licenses/.
#
# Install using:
#     sudo bash -c "$(wget -qLO - https://github.com/alandoyle/helper-scripts/raw/main/installers/incus-installer)"
# or
#     sudo bash -c "$(curl -sSfL https://github.com/alandoyle/helper-scripts/raw/main/installers/incus-installer)"
#
################################################################################
#
# Root check
#
if [ `id -u` -ne 0 ] ; then
    echo "ERROR: This script needs to be run as root or using sudo."
    exit 99
fi

################################################################################
#
# Debian 12 (or higher) check
#
VERSION_ID="0"
VERSION_CODENAME=unknown
INCUS_PKG=incus-base
ID=unknown
. /etc/os-release
if [ "${ID}" != "debian" -a $VERSION_ID -lt 12 ] ; then
    echo "ERROR: This script needs to be run on Debian 12 (bookworm) or higher."
    exit 98
fi

################################################################################
#
# Add bookworm backports (if necessary), not required on Armbian/Trixie/Sid
#
if [ "${VERSION_CODENAME}" = "bookworm" ] ; then
    NEED_BACKPORTS=TRUE
    grep bookworm-backports /etc/apt/sources.list >/dev/null
    [ $? -eq 0 ] && NEED_BACKPORTS=FALSE
    grep bookworm-backports /etc/apt/sources.list.d/*.list >/dev/null
    [ $? -eq 0 ] && NEED_BACKPORTS=FALSE

    if [ "${NEED_BACKPORTS}" = "TRUE" ] ; then
        echo "Adding Backports Repository"
        cat << EOF | tee /etc/apt/sources.list.d/backports.list >/dev/null
#
# Bookworm Backports
#
deb http://deb.debian.org/debian bookworm-backports main contrib non-free non-free-firmware
deb-src http://deb.debian.org/debian bookworm-backports main contrib non-free non-free-firmware
EOF
    fi
    INCUS_PKG=incus-base/bookworm-backports
fi

################################################################################
#
# Make sure system is up-to-date before continuing
#
apt update && apt upgrade -y

################################################################################
#
# Install Incus Base (as per https://discuss.linuxcontainers.org/t/incus-deinstalled-after-upgrade-in-debian-bookworm-with-backports/23209)
#
apt install bridge-utils ${INCUS_PKG} -y

################################################################################
#
# Prevent connectivity issues with Incus and Docker (also needed for Armbian if using ifupdown insted of NetworkManager)
# https://linuxcontainers.org/incus/docs/main/howto/network_bridge_firewalld/#prevent-connectivity-issues-with-incus-and-docker
#
echo "net.ipv4.conf.all.forwarding=1" > /etc/sysctl.d/99-forwarding.conf
systemctl restart systemd-sysctl

################################################################################
#
# Add local user to incus-admin group (only for new shells)
#
INCUS_USER=${SUDO_USER}
[ -z ${INCUS_USER} ] && INCUS_USER=${USER}
usermod -aG incus-admin ${INCUS_USER}

################################################################################
#
# Add Incus aliases
#
cat << EOF | tee /etc/profile.d/incus.sh >/dev/null
. /etc/os-release
#
# Incus Aliases
#
alias lxc='incus'
alias lslx='incus ls -cns4 -f compact|egrep "RUNNING|STOPPED"'
alias lxrm='incus delete'
alias lxnew="incus launch images:debian/\${VERSION_ID}"
alias lxdknew="incus launch images:debian/\${VERSION_ID} -c security.nesting=true -c security.syscalls.intercept.mknod=true -c security.syscalls.intercept.setxattr=true"
alias lxup='incus start'
alias lxdn='incus stop'
alias lxrs='incus restart'
function lxxc() {
        incus exec \${1} /bin/bash
}
EOF

################################################################################
#
# Set up the system as per https://documentation.ubuntu.com/lxd/stable-4.0/production-setup/
#
[ ! -f /etc/security/limits.conf.ORIG ] && mv /etc/security/limits.conf /etc/security/limits.conf.ORIG
echo "Creating /etc/security/limits.conf"
cat << EOF | tee /etc/security/limits.conf >/dev/null
# /etc/security/limits.conf
#

#<domain>      <type>  <item>         <value>
*				soft	nofile			1048576
*				hard	nofile			1048576
root			soft	nofile			1048576
root			hard	nofile			1048576
*				soft	memlock			unlimited
*				hard	memlock			unlimited

# End of file
EOF

SYSCTL_FILE=/etc/sysctl.d/99-incus.conf
echo "Creating ${SYSCTL_FILE}"
cat << EOF | tee ${SYSCTL_FILE} >/dev/null
# LXC Settings
#

fs.aio-max-nr=524288
fs.inotify.max_queued_events=1048576
fs.inotify.max_user_instances=1048576
fs.inotify.max_user_watches=1048576
kernel.dmesg_restrict=1
kernel.keys.maxbytes=2000000
kernel.keys.maxkeys=20000
net.ipv4.neigh.default.gc_thresh3=8192
net.ipv6.neigh.default.gc_thresh3=8192
vm.max_map_count=262144

# End of file
EOF

################################################################################
#
# Show Incus version
#
echo "Incus v`incus --version` installed."
echo "Please 'reboot' to complete install."
